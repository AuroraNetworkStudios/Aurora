plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

configurations {
    shade
}

group = 'gg.auroramc'
version = '3.0.0'

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven { url "https://maven.enginehub.org/repo/" }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"

    // 3rd party
    compileOnly "me.clip:placeholderapi:2.11.3"
    compileOnly 'net.essentialsx:EssentialsX:2.19.0'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"

    // 3rd party local
    compileOnly name: 'CMI9.0.0.0API'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // HikariCP
    implementation("com.zaxxer:HikariCP:5.1.0") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    // JUnit Jupiter API and Engine dependencies
    testImplementation "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

test {
    useJUnitPlatform()
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        jvmArgs()
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier = ''
    // Include dependency from the 'shade' configuration into the JAR
    configurations = [project.configurations.runtimeClasspath]

    // Relocate the exp4j package to prevent any conflicts with other versions that might be on the classpath
    relocate "com.zaxxer.hikari", "gg.auroramc.auroralib.libs.hikari"
}

publishing {
    repositories {
        maven {
            allowInsecureProtocol = true
            url "http://10.8.0.1:9091/repository/maven-releases/"
            credentials {
                username "aurora"
                password "aurorapublish-!"
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifact("build/libs/AuroraLib-$version" + ".jar") {
                extension 'jar'
            }
        }
    }
}

